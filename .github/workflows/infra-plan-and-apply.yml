name: Terraform Plan and Apply

on:
  push:
    branches:
      - main
      #- infra/terraform
      - infra/content-pipeline
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan:
    if: github.event_name == 'push' && github.ref != 'refs/heads/main' && github.ref == 'refs/heads/**' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/terraform/envs/prod
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TF_ROLE_ARN }}
          aws-region: eu-west-2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
      - run: terraform init -input=false
      - run: terraform fmt -check
      - run: terraform validate
      - id: plan
        run: terraform plan -input=false -no-color -out=tfplan
      - run: terraform show -no-color tfplan | tee plan.txt
      - uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          path: infra/terraform/envs/prod/plan.txt

  apply:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: plan
    defaults:
      run:
        working-directory: infra/terraform/envs/prod
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TF_ROLE_ARN }}
          aws-region: eu-west-2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
      - run: terraform init -input=false
      - run: terraform apply -input=false -auto-approve
      - name: Set Secrets Manager value for content-sync PAT
        if: ${{ success() }}
        env:
          AWS_REGION: eu-west-2
          SECRET_NAME: ekelola/github/pat_content_sync
          SECRET_VALUE: ${{ secrets.CONTENT_SYNC_PAT }}
        run: |
          set -euo pipefail
          if [ -z "${SECRET_VALUE:-}" ]; then
            echo "ERROR: CONTENT_SYNC_PAT is not set in repo secrets." >&2
            exit 1
          fi

          if aws secretsmanager describe-secret --region "$AWS_REGION" --secret-id "$SECRET_NAME" >/dev/null 2>&1; then
            aws secretsmanager put-secret-value \
              --region "$AWS_REGION" \
              --secret-id "$SECRET_NAME" \
              --secret-string "$SECRET_VALUE" \
              --no-cli-pager
            echo "Updated secret value for $SECRET_NAME"
          else
            aws secretsmanager create-secret \
              --region "$AWS_REGION" \
              --name "$SECRET_NAME" \
              --secret-string "$SECRET_VALUE" \
              --tags Key=Project,Value=ekelola Key=Env,Value=prod Key=Stack,Value=content-pipeline \
              --no-cli-pager
            echo "Created secret $SECRET_NAME"
          fi

  manual-apply:
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/**'
    runs-on: ubuntu-latest
    needs: plan
    defaults:
      run:
        working-directory: infra/terraform/envs/prod
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TF_ROLE_ARN }}
          aws-region: eu-west-2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
      - run: terraform init -input=false
      - run: terraform apply -input=false -auto-approve
      - name: Set Secrets Manager value for content-sync PAT
        if: ${{ success() }}
        env:
          AWS_REGION: eu-west-2
          SECRET_NAME: ekelola/github/pat_content_sync
          SECRET_VALUE: ${{ secrets.CONTENT_SYNC_PAT }}
        run: |
          set -euo pipefail
          if [ -z "${SECRET_VALUE:-}" ]; then
            echo "ERROR: CONTENT_SYNC_PAT is not set in repo secrets." >&2
            exit 1
          fi

          if aws secretsmanager describe-secret --region "$AWS_REGION" --secret-id "$SECRET_NAME" >/dev/null 2>&1; then
            aws secretsmanager put-secret-value \
              --region "$AWS_REGION" \
              --secret-id "$SECRET_NAME" \
              --secret-string "$SECRET_VALUE" \
              --no-cli-pager
            echo "Updated secret value for $SECRET_NAME"
          else
            aws secretsmanager create-secret \
              --region "$AWS_REGION" \
              --name "$SECRET_NAME" \
              --secret-string "$SECRET_VALUE" \
              --tags Key=Project,Value=ekelola Key=Env,Value=prod Key=Stack,Value=content-pipeline \
              --no-cli-pager
            echo "Created secret $SECRET_NAME"
          fi      