name: Terraform Plan and Apply

on:
  push:
    branches:
      - main
      - infra/terraform
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan:
    if: github.event_name == 'push' && github.ref == 'refs/heads/infra/terraform' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/terraform/envs/prod
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TF_ROLE_ARN }}
          aws-region: eu-west-2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
      - run: terraform init -input=false
      - run: terraform fmt -check
      - run: terraform validate
      - id: plan
        run: terraform plan -input=false -no-color -out=tfplan
      - run: terraform show -no-color tfplan | tee plan.txt
      - uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          path: infra/terraform/envs/prod/plan.txt

  apply:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: plan
    defaults:
      run:
        working-directory: infra/terraform/envs/prod
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TF_ROLE_ARN }}
          aws-region: eu-west-2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
      - run: terraform init -input=false
      - run: terraform apply -input=false -auto-approve

  manual-apply:
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/infra/terraform'
    runs-on: ubuntu-latest
    needs: plan
    defaults:
      run:
        working-directory: infra/terraform/envs/prod
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TF_ROLE_ARN }}
          aws-region: eu-west-2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
      - run: terraform init -input=false
      - run: terraform apply -input=false -auto-approve